/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2020-04-29 01:23:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class visual_005fmap_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("    <head>\r\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\">\r\n");
      out.write("        <title>StatisticMap</title>\r\n");
      out.write("        <link href=\"bootstrap-3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("\t\t<link href=\"css/result.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("\t\t<link href=\"css/nav.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("\t\t<script src=\"js/jquery-2.1.1.js\"></script>\r\n");
      out.write("\t\t<script src=\"bootstrap-3.3.7/js/bootstrap.min.js\"></script>\r\n");
      out.write("\t\t<style>\r\n");
      out.write("\t\t\t\t@media screen and (max-width: 768px) {\r\n");
      out.write("\t\t\t\t\t.right {\r\n");
      out.write("\t\t\t\t\t\tdisplay: none;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t@media screen and (max-width: 750px) {\r\n");
      out.write("\t\t\t\t\t.num {\r\n");
      out.write("\t\t\t\t\t\tdisplay: none;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tp{\r\n");
      out.write("\t\t\t\t\tmargin: 5px;\r\n");
      out.write("\t\t\t\t\tfont-weight: 300;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t</style>\r\n");
      out.write("    </head>\r\n");
      out.write("    <body>\r\n");
      out.write("    \t<div class=\"container-fluid\">\r\n");
      out.write("    \t\t<div class=\"row\">\r\n");
      out.write("    \t\t\t<div class=\"col-md-3\">\r\n");
      out.write("    \t\t\t\t<div class=\"row\">\r\n");
      out.write("    \t\t\t\t\t<p>服务</p>\r\n");
      out.write("    \t\t\t\t\t<div id=\"service\" style=\"width: 100%;height:400px;\"></div>\r\n");
      out.write("    \t\t\t\t</div>\r\n");
      out.write("    \t\t\t</div>\r\n");
      out.write("    \t\t\t<div class=\"col-md-6\">\r\n");
      out.write("    \t\t\t\t<div class=\"row\">\r\n");
      out.write("    \t\t\t\t\t<p>全球态势</p>\r\n");
      out.write("    \t\t\t\t\t<div id=\"3D-earth\" style=\"width: 100%;height:600px;\"></div>\r\n");
      out.write("    \t\t\t\t</div>\r\n");
      out.write("    \t\t\t</div>\r\n");
      out.write("    \t\t\t<div class=\"col-md-3\">\r\n");
      out.write("    \t\t\t\t<div class=\"row\">\r\n");
      out.write("    \t\t\t\t\t<p>端口</p>\r\n");
      out.write("    \t\t\t\t\t<div id=\"port\" style=\"width: 100%;height:400px;\"></div>\r\n");
      out.write("    \t\t\t\t</div>\r\n");
      out.write("    \t\t\t</div>\r\n");
      out.write("    \t\t</div>\r\n");
      out.write("    \t\t<div class=\"row text-center\">\r\n");
      out.write("    \t\t\t<p style=\"font-family: '楷体';\">谛听全球工控态势</p>\r\n");
      out.write("    \t\t</div>\r\n");
      out.write("    \t</div>\r\n");
      out.write(" \t</body>\r\n");
      out.write(" \t\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"js/echarts.min.js\" ></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"js/echarts-gl.min.js\" ></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"js/world.js\" ></script>\r\n");
      out.write("\t<script src=\"js/jquery-2.1.1.js\"></script>\r\n");
      out.write(" \t<script type=\"text/javascript\">\r\n");
      out.write(" \t//初始化echarts\r\n");
      out.write("\t\tvar service = echarts.init(document.getElementById(\"service\"));\r\n");
      out.write("\t\tvar port = echarts.init(document.getElementById(\"port\"));\r\n");
      out.write("\t\tvar earth = echarts.init(document.getElementById(\"3D-earth\"));\r\n");
      out.write("\r\n");
      out.write("\t\t//服务\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\ttype:\"post\",\r\n");
      out.write("\t\t\turl:\"map/service\",\r\n");
      out.write("\t\t\tasync:true,\r\n");
      out.write("\t\t\tsuccess:function(res){\r\n");
      out.write("\t\t\t\tserviceOption = {\r\n");
      out.write("\t\t\t\t    tooltip: {\r\n");
      out.write("\t\t\t\t        trigger: 'item',\r\n");
      out.write("\t\t\t\t        formatter: \"{a} <br/>{b}: {c} ({d}%)\",\r\n");
      out.write("\t\t\t\t    },\r\n");
      out.write("\t\t\t\t    legend: {\r\n");
      out.write("\t\t\t\t        orient: 'horizontal',\r\n");
      out.write("\t\t\t\t        x: 'left'\r\n");
      out.write("\t\t\t\t    },\r\n");
      out.write("\t\t\t\t    series: [\r\n");
      out.write("\t\t\t\t        {\r\n");
      out.write("\t\t\t\t            name: '谛听',\r\n");
      out.write("\t\t\t\t            type: 'pie',\r\n");
      out.write("\t\t\t\t            radius: '55%',\r\n");
      out.write("\t\t\t\t\t\t\tcenter: ['50%', '50%'],\r\n");
      out.write("\t\t\t\t\t\t\tdata: res.data[0].item,\r\n");
      out.write("\t\t\t\t\t\t\troseType: 'radius',\r\n");
      out.write("\t\t\t\t            label: {\r\n");
      out.write("\t\t\t\t            \tshow: true,\r\n");
      out.write("\t\t\t\t                color: 'rgba(0,0,0,0.3)'\r\n");
      out.write("\t\t\t\t            },\r\n");
      out.write("\t\t\t\t            labelLine: { //视觉引导线\r\n");
      out.write("\t\t\t\t                lineStyle: {\r\n");
      out.write("\t\t\t\t                    color: 'rgba(0, 0, 0, 0.3)'\r\n");
      out.write("\t\t\t\t                },\r\n");
      out.write("\t\t\t\t                smooth: 0.2,\r\n");
      out.write("\t\t\t\t                length: 10,\r\n");
      out.write("\t\t\t\t                length2: 20\r\n");
      out.write("\t\t\t\t            },\r\n");
      out.write("\t\t\t\t            itemStyle: {\r\n");
      out.write("\t\t\t\t                color: '#c23531'\r\n");
      out.write("\t\t\t\t            }\r\n");
      out.write("\t\t\t\t        }\r\n");
      out.write("\t\t\t\t    ]\r\n");
      out.write("\t\t\t\t};\r\n");
      out.write("\t\t\t\tservice.setOption(serviceOption);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//端口\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\ttype:\"post\",\r\n");
      out.write("\t\t\turl:\"map/port\",\r\n");
      out.write("\t\t\tasync:true,\r\n");
      out.write("\t\t\tsuccess:function(res){\r\n");
      out.write("\t\t\t\tportOption = {\r\n");
      out.write("\t\t\t\t\tdataset:{\r\n");
      out.write("\t\t\t\t\t\tsource:res.data[0].item\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t    tooltip : {\r\n");
      out.write("\t\t\t\t        trigger: 'axis'\r\n");
      out.write("\t\t\t\t    },\r\n");
      out.write("\t\t\t\t    toolbox: {\r\n");
      out.write("\t\t\t\t        show : true,\r\n");
      out.write("\t\t\t\t        feature : {\r\n");
      out.write("\t\t\t\t            dataView : {show: true, readOnly: false},\r\n");
      out.write("\t\t\t\t            magicType : {show: true, type: ['line', 'bar']},\r\n");
      out.write("\t\t\t\t            restore : {show: true},\r\n");
      out.write("\t\t\t\t            saveAsImage : {show: true}\r\n");
      out.write("\t\t\t\t        }\r\n");
      out.write("\t\t\t\t    },\r\n");
      out.write("\t\t\t\t    xAxis : [\r\n");
      out.write("\t\t\t\t        {\r\n");
      out.write("\t\t\t\t            type : 'category'\r\n");
      out.write("\t\t\t\t        }\r\n");
      out.write("\t\t\t\t    ],\r\n");
      out.write("\t\t\t\t    yAxis : [\r\n");
      out.write("\t\t\t\t        {\r\n");
      out.write("\t\t\t\t            type : 'value'\r\n");
      out.write("\t\t\t\t        }\r\n");
      out.write("\t\t\t\t    ],\r\n");
      out.write("\t\t\t\t    series : [\r\n");
      out.write("\t\t\t\t        {\r\n");
      out.write("\t\t\t\t            name:'谛听',\r\n");
      out.write("\t\t\t\t            type:'bar',\r\n");
      out.write("\t\t\t\t            barWidth:20,\r\n");
      out.write("\t\t\t\t            markPoint : {\r\n");
      out.write("\t\t\t\t                data : [\r\n");
      out.write("\t\t\t\t                    {type : 'max', name: '最大值'},\r\n");
      out.write("\t\t\t\t                    {type : 'min', name: '最小值'}\r\n");
      out.write("\t\t\t\t                ]\r\n");
      out.write("\t\t\t\t            }\r\n");
      out.write("\t\t\t\t        }\r\n");
      out.write("\t\t\t\t    ]\r\n");
      out.write("\t\t\t\t};\r\n");
      out.write("\t\t\t\tport.setOption(portOption);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/********************************************************************************\r\n");
      out.write("\t\t *     \t\t\t\t\t3D地球数据可视化，展示全球工控态势\r\n");
      out.write("\t\t * ******************************************************************************/\r\n");
      out.write("\t\t// 使用 echarts 绘制世界地图的实例作为纹理\r\n");
      out.write("\t\tvar canvas = document.createElement('canvas');\r\n");
      out.write("\t\tvar mapChart = echarts.init(canvas, null, {\r\n");
      out.write("\t\t    width: 4096, height: 2048\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\tmapChart.setOption({\r\n");
      out.write("\t\t    series : [\r\n");
      out.write("\t\t        {\r\n");
      out.write("\t\t            type: 'map',\r\n");
      out.write("\t\t            map: 'world',\r\n");
      out.write("\t\t            // 绘制完整尺寸的 echarts 实例\r\n");
      out.write("\t\t            top: 0, left: 0,\r\n");
      out.write("\t\t            right: 0, bottom: 0,\r\n");
      out.write("\t\t            //二维数组，定义定位的左上角以及右下角分别所对应的经纬度\r\n");
      out.write("\t\t            boundingCoords: [[-180, 90], [180, -90]],\r\n");
      out.write("\t\t            itemStyle: {\r\n");
      out.write("\t                    show: true,\r\n");
      out.write("\t                    areaColor:\"rgb(5,101,123)\",\r\n");
      out.write("\t                    borderColor:\"#03001a\",\r\n");
      out.write("\t                    borderWidth:1\r\n");
      out.write("\t                },\r\n");
      out.write("\t                showLegendSymbol:false,\r\n");
      out.write("\t                label: {\r\n");
      out.write("\t                    show: true,\r\n");
      out.write("\t                    textStyle:{\r\n");
      out.write("\t                        color:'#fff',\r\n");
      out.write("\t                        fontSize:12,\r\n");
      out.write("\t                        fontFamily:'Consolas'\r\n");
      out.write("\t                    }\r\n");
      out.write("\t                },\r\n");
      out.write("\t                emphasis:{\r\n");
      out.write("\t                \tlabel: {\r\n");
      out.write("\t\t                    show: true,\r\n");
      out.write("\t                        textStyle:{\r\n");
      out.write("\t                            color:'#000',\r\n");
      out.write("\t                            fontSize:28,\r\n");
      out.write("\t                            fontWeight:'bold',\r\n");
      out.write("\t                            fontFamily:'Consolas',\r\n");
      out.write("\t                            backgroundColor: 'rgba(0,23,11,0)'\r\n");
      out.write("\t                        }\r\n");
      out.write("\t\t                },\r\n");
      out.write("\t\t                itemStyle: {\r\n");
      out.write("\t\t                    show: true,\r\n");
      out.write("\t                        areaColor:\"#eee\",\r\n");
      out.write("\t                        borderColor:\"#03001a\",\r\n");
      out.write("\t                        borderWidth:1\r\n");
      out.write("\t\t                }\r\n");
      out.write("\t                }\r\n");
      out.write("\t\t        }\r\n");
      out.write("\t\t    ]\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//获取全球工控态势数据\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\ttype:\"get\",\r\n");
      out.write("\t\t\turl:\"data/data1.json\",\r\n");
      out.write("\t\t\tasync:true,\r\n");
      out.write("\t\t\tsuccess:function(data){\r\n");
      out.write("\t\t\t\t\tvar max = -Infinity;\r\n");
      out.write("\t\t\t\t\tvar min = Infinity;\r\n");
      out.write("\t\t\t\t\t//map函数：遍历数组并重组\r\n");
      out.write("\t\t\t\t\tdata = data.map(function(dataItem) {\r\n");
      out.write("\t\t\t\t\t\tmax = Math.max(dataItem[2], max);\r\n");
      out.write("\t\t\t\t\t\tmin = Math.min(dataItem[2], min);\r\n");
      out.write("\t\t\t\t\t\t//返回对象\r\n");
      out.write("\t\t\t\t\t\treturn{\r\n");
      out.write("\t\t\t\t\t\t\tname: '('+dataItem[1]+','+dataItem[0]+')',\r\n");
      out.write("\t\t\t\t\t\t\tvalue: [dataItem[1], dataItem[0],dataItem[2]]\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t//console.log(data);\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tvar Opt = {\r\n");
      out.write("\t\t\t\t\t\tbackgroundColor: \"#000\",\r\n");
      out.write("\t\t\t\t\t    globe:{\r\n");
      out.write("\t\t\t\t\t\t    baseTexture: 'img/water.jpg', //贴图\r\n");
      out.write("\t\t\t\t\t\t    displacementScale: 0.04,\r\n");
      out.write("\t\t\t\t\t\t    environment:'#fff',\r\n");
      out.write("\t\t\t\t\t\t    shading:\"color\",\r\n");
      out.write("\t\t\t\t\t        viewControl:{\r\n");
      out.write("\t\t\t\t\t        \t //autoRotate: false\r\n");
      out.write("\t\t\t\t\t        },\r\n");
      out.write("\t\t\t\t\t        layers:[{ //云层\r\n");
      out.write("\t\t\t\t\t        \tshow: true,\r\n");
      out.write("\t\t\t\t\t        \ttype: 'blend', //混合\r\n");
      out.write("\t\t\t\t\t        \tname: 'cloud',\r\n");
      out.write("\t\t\t            \t\ttexture: mapChart\r\n");
      out.write("\t\t\t\t\t        }]\r\n");
      out.write("\t\t\t\t\t    },\r\n");
      out.write("\t\t\t\t\t    series: [{\r\n");
      out.write("\t\t\t\t            type: 'bar3D',\r\n");
      out.write("\t\t\t\t            coordinateSystem: 'globe',\r\n");
      out.write("\t\t\t\t            data: data,\r\n");
      out.write("\t\t\t\t            barSize: 0.6,\r\n");
      out.write("\t\t\t\t            minHeight: 0.2,\r\n");
      out.write("\t\t\t\t            silent: false, //图形是否不响应和触发鼠标事件，默认为 false，即响应和触发鼠标事件\r\n");
      out.write("\t\t\t\t            itemStyle: {\r\n");
      out.write("\t\t\t\t                color: 'orange'\r\n");
      out.write("\t\t\t\t            },\r\n");
      out.write("\t\t\t\t            emphasis:{\r\n");
      out.write("\t\t\t                \tlabel: {\r\n");
      out.write("\t\t\t\t                    show: true,\r\n");
      out.write("\t\t\t\t                    formatter: function(f){ //自定义标签显示格式\r\n");
      out.write("\t\t\t\t                    \treturn f.name+\":\"+f.value[2];\r\n");
      out.write("\t\t\t\t                    },\r\n");
      out.write("\t\t\t                        textStyle:{\r\n");
      out.write("\t\t\t                            color:'#000',\r\n");
      out.write("\t\t\t                            fontSize:28,\r\n");
      out.write("\t\t\t                            fontWeight:'bold',\r\n");
      out.write("\t\t\t                            fontFamily:'Consolas',\r\n");
      out.write("\t\t\t                            backgroundColor: 'rgba(0,23,11,0)'\r\n");
      out.write("\t\t\t                        }\r\n");
      out.write("\t\t\t\t                },\r\n");
      out.write("\t\t\t\t                itemStyle: {\r\n");
      out.write("\t\t\t\t                    show: true,\r\n");
      out.write("\t\t\t                        color:\"red\"\r\n");
      out.write("\t\t\t\t                }\r\n");
      out.write("\t\t\t                }\r\n");
      out.write("\t\t\t\t        }]\r\n");
      out.write("\t\t\t\t\t};\r\n");
      out.write("\t\t\t\t\tearth.setOption(Opt);\t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write(" \t\t\r\n");
      out.write(" \t</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
